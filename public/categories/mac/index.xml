<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on blog</title>
    <link>/categories/mac/</link>
    <description>Recent content in Mac on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Mar 2018 04:14:15 +0000</lastBuildDate>
    
	<atom:link href="/categories/mac/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>stdio.h file error during C/C&#43;&#43; software compilation on Mac</title>
      <link>/2018/03/06/stdio-h-file-error-during-c-c-software-compilation-on-mac/</link>
      <pubDate>Tue, 06 Mar 2018 04:14:15 +0000</pubDate>
      
      <guid>/2018/03/06/stdio-h-file-error-during-c-c-software-compilation-on-mac/</guid>
      <description>Recently, back in February of 2018, I updated Xcode and installed the macOS High Sierra Supplemental Update as well. I was quite unhappy to find out that, following these updates, compiling software written in C/C++ using gcc (which was up to date!) seemed to be failing with a &amp;ldquo;stdio.h&amp;rdquo; file not found error, as follows:
...fatal error: stdio.h: No such file or directory #import&amp;lt;stdio.h&amp;gt;; ^ 1 error generated. ...  The missing file was the same in multiple cases, for multiple software programs that I think included both the species tree inference software SVDquartets and the popgen/selection forward-time simulation program SFS_CODE.</description>
    </item>
    
    <item>
      <title>Command line trash: how to delete, trash, and inspect files from the CLI</title>
      <link>/2018/03/06/command-line-trash-how-to-delete-trash-and-inspect-files-from-the-cli/</link>
      <pubDate>Tue, 06 Mar 2018 03:49:42 +0000</pubDate>
      
      <guid>/2018/03/06/command-line-trash-how-to-delete-trash-and-inspect-files-from-the-cli/</guid>
      <description>As many of you know, I use a UNIX/Mac system, and I spend a great deal of time working from the command line on UNIX and LINUX. One thing that everyone learns when they&amp;rsquo;re learning the UNIX/LINUX command line is that the &amp;ldquo;rm&amp;rdquo; command is a powerful and versatile option for deleting files. However, when we delete files with rm, they never come back, and thus they cannot be inspected afterward.</description>
    </item>
    
    <item>
      <title>Getting BEAST2 Path Sampler analyses running on Windows 10</title>
      <link>/2017/08/17/getting-beast2-path-sampler-analyses-running-windows-10/</link>
      <pubDate>Thu, 17 Aug 2017 18:18:35 +0000</pubDate>
      
      <guid>/2017/08/17/getting-beast2-path-sampler-analyses-running-windows-10/</guid>
      <description>BEAST2 PathSampler
I am a relatively big Mac (UNIX) and Linux fan, as many of you know. So, my standard approach to running BEAST or BEAST2 is to use my Mac for local setup and testing and then employ shell scripts (effective wrappers) that I&amp;rsquo;ve developed to automate final run setup and queuing on a Linux supercomputing cluster. However, there are times, especially when running path sampling (PS) analysis (Larillot and Phillipe 2006; Baele et al.</description>
    </item>
    
    <item>
      <title>How to kill an R process without forcing R to quit on mac</title>
      <link>/2016/04/06/kill-r-process-without-forcing-r-quit-mac/</link>
      <pubDate>Wed, 06 Apr 2016 15:22:18 +0000</pubDate>
      
      <guid>/2016/04/06/kill-r-process-without-forcing-r-quit-mac/</guid>
      <description>From time to time, we make mistakes in programming or testing a new R script or function, only to find that R &amp;ldquo;freezes&amp;rdquo; and appears to be stuck, or working but giving the impression that it will take an eternity to complete the computation. What could be happening is that the process is based on an maximum-likelihood estimation of a parameter that requires convergence, you could have accidentally (e.g. by default) run a function that needs to visit the total number of models possible for your dataset or a certain amount of parameter space.</description>
    </item>
    
    <item>
      <title>Give your mac some relief: how to remove the sleepimage file using Terminal</title>
      <link>/2014/09/20/give-mac-relief-remove-sleepimage-file-using-terminal/</link>
      <pubDate>Sat, 20 Sep 2014 19:39:38 +0000</pubDate>
      
      <guid>/2014/09/20/give-mac-relief-remove-sleepimage-file-using-terminal/</guid>
      <description>Your mac, depending on how you have it set up and how you use it, can slow on start up from restarts or hibernation due to the presence of a very large file called &amp;ldquo;sleepimage&amp;rdquo;. This is a very important file generated by Safe Sleep (on all MacBook Pros, for example) that serves the purpose of saving a state of your mac&amp;rsquo;s memory that keeps you from losing data when the computer sleeps, hibernates, restarts, or runs out of memory.</description>
    </item>
    
  </channel>
</rss>