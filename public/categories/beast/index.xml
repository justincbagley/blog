<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beast on blog</title>
    <link>/categories/beast/</link>
    <description>Recent content in Beast on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Aug 2017 18:18:35 +0000</lastBuildDate>
    
	<atom:link href="/categories/beast/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting BEAST2 Path Sampler analyses running on Windows 10</title>
      <link>/2017/08/17/getting-beast2-path-sampler-analyses-running-windows-10/</link>
      <pubDate>Thu, 17 Aug 2017 18:18:35 +0000</pubDate>
      
      <guid>/2017/08/17/getting-beast2-path-sampler-analyses-running-windows-10/</guid>
      <description>BEAST2 PathSampler
I am a relatively big Mac (UNIX) and Linux fan, as many of you know. So, my standard approach to running BEAST or BEAST2 is to use my Mac for local setup and testing and then employ shell scripts (effective wrappers) that I&amp;rsquo;ve developed to automate final run setup and queuing on a Linux supercomputing cluster. However, there are times, especially when running path sampling (PS) analysis (Larillot and Phillipe 2006; Baele et al.</description>
    </item>
    
    <item>
      <title>Setting DNA substitution models in BEAST</title>
      <link>/2016/10/11/setting-dna-substitution-models-beast/</link>
      <pubDate>Tue, 11 Oct 2016 19:52:55 +0000</pubDate>
      
      <guid>/2016/10/11/setting-dna-substitution-models-beast/</guid>
      <description>JC model of sequence evolution from TreeThinkers.
BEAST (Bayesian Evolutionary Analysis Sampling Trees) software provides a growing set of clear options for specifying evolutionary models of DNA substitution for alignments loaded into the program. However, the set of models that are readily available and &amp;ldquo;spelled out&amp;rdquo; in drop-down menus in the BEAUti (Bayesian Evolutionary Analysis Utility) GUI is much smaller compared to the standard set of 11 substitution schemes considered by other software programs for model selection (giving rise to a total of 88 models in jModelTest, or 56 models in PartitionFinder).</description>
    </item>
    
    <item>
      <title>Latest *BEAST trace: Most beautiful thing I&#39;ve seen today</title>
      <link>/2016/03/11/latest-beast-trace-beautiful-thing-ive-seen-today/</link>
      <pubDate>Fri, 11 Mar 2016 12:00:01 +0000</pubDate>
      
      <guid>/2016/03/11/latest-beast-trace-beautiful-thing-ive-seen-today/</guid>
      <description>My new *BEAST (starbeast) species tree runs are converging wonderfully in BEAST v1.8.3, so I am off to a great start this morning. Here, I&amp;rsquo;m including a screenshot of the results of one of these runs, which I ran for 200 million generations using 3 normally distributed calibration points, as visualized in Tracer. Note the good posterior trace, very high ESS scores for all parameter estimates, and good use of burn-in (default 10% value works quite well in this case).</description>
    </item>
    
    <item>
      <title>Getting BEAST v1.8.3 running! Beagle, CUDA, Java, and LINUX</title>
      <link>/2016/03/10/getting-beast-v1-8-3-running-java-cuda-beagle-linux/</link>
      <pubDate>Thu, 10 Mar 2016 12:16:25 +0000</pubDate>
      
      <guid>/2016/03/10/getting-beast-v1-8-3-running-java-cuda-beagle-linux/</guid>
      <description>OK, I recently posted here about the new BEAST v1.8.3 release to let people know it was available (just echoing the announcement from Andrew Rambaut). Not sure about you, but when I get ahold of a new version of BEAST, I generally get it set up in my file system and try to run it. It&amp;rsquo;s good to go into this type of thing with a little dose of skepticism, as in my experience new versions of BEAST contain bug fixes but also seem to introduce new bugs or problems that you can run into.</description>
    </item>
    
    <item>
      <title>Dealing with negative phylogenetic branch lengths in BEAST starting trees</title>
      <link>/2016/03/01/dealing-negative-phylogenetic-branch-lengths-beast-starting-trees/</link>
      <pubDate>Tue, 01 Mar 2016 21:43:35 +0000</pubDate>
      
      <guid>/2016/03/01/dealing-negative-phylogenetic-branch-lengths-beast-starting-trees/</guid>
      <description>Negative branch lengths and the BEAST When conducting phylogenetic analyses, you will from time to time encounter negative branch lengths. Negative branch lengths are a nuisance because they can cause substantial visualization problems or keep analyses (e.g. downstream analyses in other programs) from running.
For example, it will be desirable in many cases to add a starting tree to input files for datasets with phylogeographical sampling (e.g. multiple individuals in a standard BEAST analysis, or a *BEAST species tree analysis with multiple individuals sampled per species/population modeled).</description>
    </item>
    
    <item>
      <title>New version of BEAST--v1.8.3--released!</title>
      <link>/2016/02/22/new-version-beast-v1-8-3-released/</link>
      <pubDate>Mon, 22 Feb 2016 17:10:32 +0000</pubDate>
      
      <guid>/2016/02/22/new-version-beast-v1-8-3-released/</guid>
      <description>BEAST v1.8.3 logo
In case you were unaware, Andrew Rambaut has made a new version of BEAST 1, v1.8.3, available for Mac, Windows and Linux (.dmg, .zip, .tgz) at the BEAST 1 GitHub website.
According to Andrew, new features of this version include:
 Generalized Stepping Stone sampling for Marginal Likelihood Estimation. Continuous quantile version of uncorrelated relaxed clock as option in BEAUti [from Li &amp;amp; Drummond 2012, MBE]. Option in BEAUti to log complete histories in Markov Jump Counting.</description>
    </item>
    
    <item>
      <title>Update: BEAST v2.3.2 released!</title>
      <link>/2015/12/17/update-beast-v2-3-2-released/</link>
      <pubDate>Thu, 17 Dec 2015 13:04:58 +0000</pubDate>
      
      <guid>/2015/12/17/update-beast-v2-3-2-released/</guid>
      <description>BEAST2 logo
Hi guys, OK, in case you haven&amp;rsquo;t heard, there is a new version of BEAST2, so make sure that you go get that update on GitHub. According to Remco Bouckaert, the new version, v2.3.2, improves the ability of the user to interact with data in BEAUti, and it also improves the efficiency of some BEAST functions, particularly the MRCAPrior. Moreover, LogCombiner has been fixed to ensure logcombiner burn in editing finished properly, and LogAnalyser now has one line per file mode.</description>
    </item>
    
    <item>
      <title>Update to BEAST v2.3.1</title>
      <link>/2015/12/02/update-beast-v2-3-1/</link>
      <pubDate>Wed, 02 Dec 2015 12:25:54 +0000</pubDate>
      
      <guid>/2015/12/02/update-beast-v2-3-1/</guid>
      <description>BEAST2 logo
A couple of months ago the developers released a new version of BEAST, v2.3.1. I like to remind myself and others to update your BEAST and its utilities to this latest version, which you can download it here.
BEAST v2.3.1 contains a number of important updates. Most notably, TreeAnnotator now has the default memory set to 4 Gb, and this will greatly help ambitious people who try to upload and summarize large numbers of trees, or the posterior distribution of trees from an analysis with many tree tips.</description>
    </item>
    
    <item>
      <title>Coding general data types with ambiguities in BEAST input files</title>
      <link>/2015/09/08/coding-general-data-types-with-ambiguities-in-beast-input-files/</link>
      <pubDate>Tue, 08 Sep 2015 03:07:12 +0000</pubDate>
      
      <guid>/2015/09/08/coding-general-data-types-with-ambiguities-in-beast-input-files/</guid>
      <description>The generalDataType Problem BEAST allows users to specify general data types&amp;ndash;formally, tag &amp;ldquo;generalDataType&amp;rdquo;&amp;ndash;with codes representing ambiguities reflecting multiple character states. People have questions/problems creating and using these general data types, e.g. here and here. The main issues are understanding what general data types are, as well as how to code them in the BEAST XML input file so that BEAST runs without errors.
Specifying general data types To solve the first issue, you should first know that a generalDataType tag can be specified in input files for BEAST v1 or BEAST2.</description>
    </item>
    
    <item>
      <title>Update: &#39;new&#39; functions for generating starting trees for BEAST or *BEAST in R</title>
      <link>/2015/08/30/update-new-functions-for-generating-starting-trees-for-beast-or-starbeast-in-r/</link>
      <pubDate>Sun, 30 Aug 2015 02:55:29 +0000</pubDate>
      
      <guid>/2015/08/30/update-new-functions-for-generating-starting-trees-for-beast-or-starbeast-in-r/</guid>
      <description>Background
In a previous blog post, which has received quite a bit of attention, I detailed how to get &amp;ldquo;off to a good start&amp;rdquo; by generating a starting tree for your BEAST analyses. The goal was to work from a tree with branch lengths in units of substitutions per site and to finish with an ultrametric, time-calibrated tree topology with node ages matching calibration points (e.g. fossil ages) you intended to use in BEAST.</description>
    </item>
    
    <item>
      <title>Get the latest version of BEAST - v2.3.0 - then ask, &#34;Do you need it?&#34;</title>
      <link>/2015/08/28/get-the-latest-version-of-beast-v2-3-0-then-ask-do-you-need-it/</link>
      <pubDate>Fri, 28 Aug 2015 23:20:27 +0000</pubDate>
      
      <guid>/2015/08/28/get-the-latest-version-of-beast-v2-3-0-then-ask-do-you-need-it/</guid>
      <description>Hi BEAST users subscribed to justinbagley.org. As what is for many of you an academic summer starts winding down its backslope, this is a little reminder that you should try and finish all the BEAST analyses you&amp;rsquo;ve been putting off, and in case you haven&amp;rsquo;t done so already you should consider updating to the latest version of BEAST2, v2.3.0, which was released in June. Make sure you also update to the most up-to-date java version too; don&amp;rsquo;t worry, after the update BEAST v2.</description>
    </item>
    
    <item>
      <title>Update to latest version of BEAST2 - v2.2.1</title>
      <link>/2015/03/26/update-latest-version-beast2-v2-2-1/</link>
      <pubDate>Thu, 26 Mar 2015 01:34:21 +0000</pubDate>
      
      <guid>/2015/03/26/update-latest-version-beast2-v2-2-1/</guid>
      <description>Hi BEAST users subscribed to justinbagley.org. Here&amp;rsquo;s a note to serve as a little reminder that, when you have a moment, you should update your BEAST2 software package to the latest version, v2.2.1, which was released last week.
As always, the new BEAST2 version works with the most up-to-date versions of java (e.g. version 8 update 31 from January, or version 8 update 40), which you no doubt have recently downloaded since they came out in the past three months.</description>
    </item>
    
    <item>
      <title>New BEAST2 Tutorial that Rocks!</title>
      <link>/2014/12/27/new-beast2-tutorial-rocks/</link>
      <pubDate>Sat, 27 Dec 2014 17:02:23 +0000</pubDate>
      
      <guid>/2014/12/27/new-beast2-tutorial-rocks/</guid>
      <description>There are few things that are more useful or necessary in evolutionary biology these days than learning new computational skills, including how to run software programs. For this, there are a variety of sources of information: journal articles (methods papers/sections), library books, online books (e-Books), workshops, online tutorials, and internet blogs like this one. Tutorials are among the best of these options given their practical focus, and because they often include step-by-step instructions with screenshots showing how to interact with GUIs, etc.</description>
    </item>
    
    <item>
      <title>Alternative ways to quickly get post-burnin trees from BEAST output from the command line</title>
      <link>/2014/12/26/quickly-get-post-burnin-trees-beast-output-without-using-log-combiner-tree-annotator/</link>
      <pubDate>Fri, 26 Dec 2014 11:06:40 +0000</pubDate>
      
      <guid>/2014/12/26/quickly-get-post-burnin-trees-beast-output-without-using-log-combiner-tree-annotator/</guid>
      <description>Evolutionary biologists generally use nice java-written utility programs that come in the standard BEAST distribution to obtain post-burnin trees for summarizing the results of a converged BEAST run (or *BEAST run) that reached stationarity. Usually, only 5,000 to 20,000 trees are necessary for this, and these are typically obtained by cutting out &amp;lsquo;burnin&amp;rsquo; trees and then &amp;ldquo;thinning&amp;rdquo; trees from &amp;ldquo;.trees&amp;rdquo; output files using LogCombiner until the desired number of trees is reached.</description>
    </item>
    
    <item>
      <title>Updated links to BEAST 1.7.5 phylogeography tutorials</title>
      <link>/2014/08/07/updated-links-beast-1-7-5-phylogeography-tutorials/</link>
      <pubDate>Thu, 07 Aug 2014 20:59:25 +0000</pubDate>
      
      <guid>/2014/08/07/updated-links-beast-1-7-5-phylogeography-tutorials/</guid>
      <description>As you know, BEAST is being developed by two separate groups of biologists and computer scientists, those working on beast 1.7&amp;frasl;8 and those devleoping Beast2. BEAST is essentially the main evolutionary analysis program now for phylogenetics, historical biogeography, species delimitation, and different phylogeography approaches; so it matters when there is an update. This is just a quick post to highlight that changes to BEAST 1.7.5 phylogeography tutorials have been made, in case you didn&amp;rsquo;t get word of this through recent emails.</description>
    </item>
    
    <item>
      <title>So you got a starting tree?  How to add it to your BEAST2 xml file and make it work for you</title>
      <link>/2014/02/17/got-starting-tree-add-beast2-xml-file-make-work/</link>
      <pubDate>Mon, 17 Feb 2014 04:46:23 +0000</pubDate>
      
      <guid>/2014/02/17/got-starting-tree-add-beast2-xml-file-make-work/</guid>
      <description>I have now for several months been happily using BEAST2 instead of Beast 1.7.5 or 1.8.x&amp;ndash;I&amp;rsquo;m converted! Thus far, datasets have run surprisingly smoothly, but for some recent analyses I have tried to jump-start things and ensure proper likelihood values at the onset of runs by including a starting tree in my xml input file.
Previously, I blogged about just how you might create such a starting tree that fits one or multiple calibration points in a BEAST analysis, by using penalized likelihood analysis (r8s) in R.</description>
    </item>
    
    <item>
      <title>New version of Tracer - Tracer v1.6 - now available!</title>
      <link>/2013/12/11/new-version-tracer-tracer-1-6-now-available/</link>
      <pubDate>Wed, 11 Dec 2013 20:02:10 +0000</pubDate>
      
      <guid>/2013/12/11/new-version-tracer-tracer-1-6-now-available/</guid>
      <description>OK, heads up everyone using BEAST, or interested in summarizing and analyzing the results of Bayesian analyses in other software programs! There is a new version of the program Tracer available at Andrew Rambaut&amp;rsquo;s website. You can obtain the new version of Tracer, Tracer v1.6 by downloading the appropriate version here. The new version supports several new features, and here is a list of the new stuff they&amp;rsquo;ve added to the program, taken from the website:</description>
    </item>
    
    <item>
      <title>BEASTGen: a new program for creating NEXUS, FASTA and BEAST XML input files for phylogenetics software</title>
      <link>/2013/10/29/beastgen-a-new-program-for-creating-nexus-fasta-and-beast-xml-input-files-for-phylogenetics-software/</link>
      <pubDate>Tue, 29 Oct 2013 15:36:00 +0000</pubDate>
      
      <guid>/2013/10/29/beastgen-a-new-program-for-creating-nexus-fasta-and-beast-xml-input-files-for-phylogenetics-software/</guid>
      <description>Andrew Rambaut has released the first version of a new software program, BEASTGen, that transforms phylogenetic data between the standard NEXUS, FASTA and BEAST XML formats. Could this mean that we are one step closer to calming many graduate students&amp;rsquo; (and other people&amp;rsquo;s) woes over this issue?
The new software can be downloaded from the BEAST Google code website, at https://code.google.com/p/beast-mcmc/downloads/detail?name=BEASTGen_v1.0.tgz.
Andrew has also written a brief set of instructions that can be found on the BEAST website, at http://beast.</description>
    </item>
    
    <item>
      <title>Off to a good start: how to generate starting trees for BEAST analyses using R</title>
      <link>/2013/10/10/off-to-a-good-start-how-to-generate-starting-trees-for-beast-analyses-using-r/</link>
      <pubDate>Thu, 10 Oct 2013 20:35:00 +0000</pubDate>
      
      <guid>/2013/10/10/off-to-a-good-start-how-to-generate-starting-trees-for-beast-analyses-using-r/</guid>
      <description>BEAST and user trees
The program BEAST (e.g. latest release version v1.8.0; or v2.1.1; Drummond et al. 2012) is increasingly more and more popular and important in the fields of evolutionary biology and the biology of infectious diseases. When conducting MCMC simulations to simultaneously make phylogenetic inference and estimate divergence times, and/or coalescent model parameters (summary statistics) in BEAST, it is usually necessary, and desirable, to provide some form of calibrated tree priors.</description>
    </item>
    
    <item>
      <title>BEAST and the BEAST basics: molecular clocks and how to input rates into BEAST</title>
      <link>/2011/09/01/beast-and-the-beast-basics-molecular-clocks-and-how-to-input-rates-into-beast/</link>
      <pubDate>Thu, 01 Sep 2011 23:38:00 +0000</pubDate>
      
      <guid>/2011/09/01/beast-and-the-beast-basics-molecular-clocks-and-how-to-input-rates-into-beast/</guid>
      <description>BEAST basics **A brief introduction to BEAST ** BEAST is a powerful computer program for evolutionary analysis developed by Andrew Rambaut and Alexei Drummond, as well as Marc Suchard, Simon Ho, Joseph Heled, and others. BEAST was originally designed to provide a Bayesian Markov chain Monte Carlo (MCMC) method for simultaneously co-estimating phylogenies and divergence times (times to the most recent common ancestor, TMRCAs) from DNA sequence data (or amino acids) for one or multiple loci.</description>
    </item>
    
  </channel>
</rss>